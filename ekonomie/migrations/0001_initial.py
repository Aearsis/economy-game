# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-03-20 20:17
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import timedelta.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Auction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('begin', timedelta.fields.TimedeltaField()),
                ('end', timedelta.fields.TimedeltaField()),
                ('description', models.TextField(max_length=256)),
                ('minimum', models.PositiveIntegerField()),
                ('bid_step', models.PositiveIntegerField()),
                ('transaction_made', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='AuctionedItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveIntegerField()),
                ('visible', models.BooleanField()),
                ('will_sell', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Balance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveIntegerField()),
                ('blocked', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Bid',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Entity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('units', models.TextField(blank=True)),
                ('licence', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ekonomie.Entity')),
            ],
            options={
                'verbose_name_plural': 'Entities',
            },
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('started', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.PositiveSmallIntegerField(choices=[((0,), 'Consumes'), ((1,), 'Needs'), ((2,), 'Creates')])),
                ('amount', models.IntegerField()),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ekonomie.Entity')),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', timedelta.fields.TimedeltaField()),
                ('message', models.TextField()),
            ],
            options={
                'verbose_name_plural': 'Statuses',
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(max_length=256, unique=True)),
                ('visible', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='BlackAuction',
            fields=[
                ('auction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ekonomie.Auction')),
                ('seller_name', models.TextField()),
                ('status_text', models.TextField()),
            ],
            options={
                'verbose_name_plural': 'Black market offers',
            },
            bases=('ekonomie.auction',),
        ),
        migrations.CreateModel(
            name='WhiteAuction',
            fields=[
                ('auction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ekonomie.Auction')),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ekonomie.Team')),
            ],
            options={
                'verbose_name_plural': 'Auctions',
            },
            bases=('ekonomie.auction',),
        ),
        migrations.AddField(
            model_name='status',
            name='team',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ekonomie.Team'),
        ),
        migrations.AddField(
            model_name='player',
            name='team',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ekonomie.Team'),
        ),
        migrations.AddField(
            model_name='player',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='ingredient',
            name='recipe',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ekonomie.Recipe'),
        ),
        migrations.AddField(
            model_name='bid',
            name='auction',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ekonomie.Auction'),
        ),
        migrations.AddField(
            model_name='bid',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ekonomie.Team'),
        ),
        migrations.AddField(
            model_name='balance',
            name='entity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ekonomie.Entity'),
        ),
        migrations.AddField(
            model_name='balance',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ekonomie.Team'),
        ),
        migrations.AddField(
            model_name='auctioneditem',
            name='auction',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ekonomie.Auction'),
        ),
        migrations.AddField(
            model_name='auctioneditem',
            name='entity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ekonomie.Entity'),
        ),
        migrations.AddField(
            model_name='auction',
            name='wants',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ekonomie.Entity'),
        ),
        migrations.AlterUniqueTogether(
            name='ingredient',
            unique_together=set([('recipe', 'entity', 'type')]),
        ),
        migrations.AlterUniqueTogether(
            name='bid',
            unique_together=set([('auction', 'team')]),
        ),
        migrations.AlterUniqueTogether(
            name='balance',
            unique_together=set([('team', 'entity')]),
        ),
        migrations.AlterUniqueTogether(
            name='auctioneditem',
            unique_together=set([('auction', 'entity')]),
        ),
    ]
